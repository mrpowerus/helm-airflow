
kind: Deployment
apiVersion: apps/v1
metadata:
  name: airflow-webserver
  labels:
    tier: airflow
    component: webserver
    release: airflow
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      tier: airflow
      component: webserver
      release: airflow
  template:
    metadata:
      labels:
        tier: airflow
        component: webserver
        release: airflow
    spec:
      restartPolicy: Always
      serviceAccountName: webserver-serviceaccount
      containers:
        - name: webserver
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          args: ["webserver"]
          ports:
            - name: webserver-ui
              containerPort: 8080
          env:
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: connection-secret
                  key: connection
                  
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: fernet-secret
                  key: fernet
          volumeMounts:
            - name: airflow-logs
              mountPath: "/opt/airflow/logs"
              subPath: airflow/logs
            - name: airflow-dags
              mountPath: /opt/airflow/dags
              readOnly: true
              subPath: airflow/dags
            - name: airflow-config
              mountPath: "/opt/airflow/airflow.cfg"
              subPath: airflow.cfg
              readOnly: true
            - name: airflow-config
              mountPath: /opt/airflow/pod_template_file.yaml
              subPath: pod_template_file.yaml
              readOnly: true
          
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 30
            failureThreshold: 20
            periodSeconds: 5

          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 30
            failureThreshold: 20
            periodSeconds: 5         

      volumes:
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags-claim
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs-claim
        - name: airflow-config
          configMap:
            name: base-config          